{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement, j as forceUpdate } from './index-7a8b7a1c.js';\nimport { c as config, b as getIonMode } from './ionic-global-63a97a32.js';\nimport { p as pointerCoord, a as addEventListener, b as removeEventListener } from './helpers-1457892a.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.didInit = false;\n    this.activated = false;\n    /**\n     * If `true`, the user cannot interact with the segment.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\n     * In addition, this will disable the gesture to drag the indicator between the buttons\n     * in order to swipe to see hidden buttons.\n     */\n    this.scrollable = false;\n    /**\n     * If `true`, users will be able to swipe between segment buttons to activate them.\n     */\n    this.swipeGesture = true;\n    this.onClick = (ev) => {\n      const current = ev.target;\n      const previous = this.checked;\n      // If the current element is a segment then that means\n      // the user tried to swipe to a segment button and\n      // click a segment button at the same time so we should\n      // not update the checked segment button\n      if (current.tagName === 'ION-SEGMENT') {\n        return;\n      }\n      this.value = current.value;\n      if (this.scrollable || !this.swipeGesture) {\n        if (previous) {\n          this.checkButton(previous, current);\n        }\n        else {\n          this.setCheckedClasses();\n        }\n      }\n      this.checked = current;\n    };\n  }\n  colorChanged(value, oldValue) {\n    /**\n     * If color is set after not having\n     * previously been set (or vice versa),\n     * we need to emit style so the segment-buttons\n     * can apply their color classes properly.\n     */\n    if ((oldValue === undefined && value !== undefined) ||\n      (oldValue !== undefined && value === undefined)) {\n      this.emitStyle();\n    }\n  }\n  swipeGestureChanged() {\n    this.gestureChanged();\n  }\n  valueChanged(value, oldValue) {\n    this.ionSelect.emit({ value });\n    if (oldValue !== '' || this.didInit) {\n      if (!this.activated) {\n        this.ionChange.emit({ value });\n      }\n      else {\n        this.valueAfterGesture = value;\n      }\n    }\n  }\n  disabledChanged() {\n    this.gestureChanged();\n    const buttons = this.getButtons();\n    for (const button of buttons) {\n      button.disabled = this.disabled;\n    }\n  }\n  gestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\n    }\n  }\n  connectedCallback() {\n    this.emitStyle();\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  async componentDidLoad() {\n    this.setCheckedClasses();\n    this.gesture = (await import('./index-34cb2743.js')).createGesture({\n      el: this.el,\n      gestureName: 'segment',\n      gesturePriority: 100,\n      threshold: 0,\n      passive: false,\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev),\n    });\n    this.gestureChanged();\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    this.didInit = true;\n  }\n  onStart(detail) {\n    this.activate(detail);\n  }\n  onMove(detail) {\n    this.setNextIndex(detail);\n  }\n  onEnd(detail) {\n    this.setActivated(false);\n    const checkedValidButton = this.setNextIndex(detail, true);\n    detail.event.stopImmediatePropagation();\n    if (checkedValidButton) {\n      this.addRipple(detail);\n    }\n    const value = this.valueAfterGesture;\n    if (value !== undefined) {\n      this.ionChange.emit({ value });\n      this.valueAfterGesture = undefined;\n    }\n  }\n  getButtons() {\n    return Array.from(this.el.querySelectorAll('ion-segment-button'));\n  }\n  /**\n   * The gesture blocks the segment button ripple. This\n   * function adds the ripple based on the checked segment\n   * and where the cursor ended.\n   */\n  addRipple(detail) {\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n    if (!useRippleEffect) {\n      return;\n    }\n    const buttons = this.getButtons();\n    const checked = buttons.find(button => button.value === this.value);\n    const root = checked.shadowRoot || checked;\n    const ripple = root.querySelector('ion-ripple-effect');\n    if (!ripple) {\n      return;\n    }\n    const { x, y } = pointerCoord(detail.event);\n    ripple.addRipple(x, y).then(remove => remove());\n  }\n  /*\n   * Activate both the segment and the buttons\n   * due to a bug with ::slotted in Safari\n   */\n  setActivated(activated) {\n    const buttons = this.getButtons();\n    buttons.forEach(button => {\n      if (activated) {\n        button.classList.add('segment-button-activated');\n      }\n      else {\n        button.classList.remove('segment-button-activated');\n      }\n    });\n    this.activated = activated;\n  }\n  activate(detail) {\n    const clicked = detail.event.target;\n    const buttons = this.getButtons();\n    const checked = buttons.find(button => button.value === this.value);\n    // Make sure we are only checking for activation on a segment button\n    // since disabled buttons will get the click on the segment\n    if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n      return;\n    }\n    // If there are no checked buttons, set the current button to checked\n    if (!checked) {\n      this.value = clicked.value;\n      this.setCheckedClasses();\n    }\n    // If the gesture began on the clicked button with the indicator\n    // then we should activate the indicator\n    if (this.value === clicked.value) {\n      this.setActivated(true);\n    }\n  }\n  getIndicator(button) {\n    const root = button.shadowRoot || button;\n    return root.querySelector('.segment-button-indicator');\n  }\n  checkButton(previous, current) {\n    const previousIndicator = this.getIndicator(previous);\n    const currentIndicator = this.getIndicator(current);\n    if (previousIndicator === null || currentIndicator === null) {\n      return;\n    }\n    const previousClientRect = previousIndicator.getBoundingClientRect();\n    const currentClientRect = currentIndicator.getBoundingClientRect();\n    const widthDelta = previousClientRect.width / currentClientRect.width;\n    const xPosition = previousClientRect.left - currentClientRect.left;\n    // Scale the indicator width to match the previous indicator width\n    // and translate it on top of the previous indicator\n    const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n    writeTask(() => {\n      // Remove the transition before positioning on top of the previous indicator\n      currentIndicator.classList.remove('segment-button-indicator-animated');\n      currentIndicator.style.setProperty('transform', transform);\n      // Force a repaint to ensure the transform happens\n      currentIndicator.getBoundingClientRect();\n      // Add the transition to move the indicator into place\n      currentIndicator.classList.add('segment-button-indicator-animated');\n      // Remove the transform to slide the indicator back to the button clicked\n      currentIndicator.style.setProperty('transform', '');\n    });\n    this.value = current.value;\n    this.setCheckedClasses();\n  }\n  setCheckedClasses() {\n    const buttons = this.getButtons();\n    const index = buttons.findIndex(button => button.value === this.value);\n    const next = index + 1;\n    // Keep track of the currently checked button\n    this.checked = buttons.find(button => button.value === this.value);\n    for (const button of buttons) {\n      button.classList.remove('segment-button-after-checked');\n    }\n    if (next < buttons.length) {\n      buttons[next].classList.add('segment-button-after-checked');\n    }\n  }\n  setNextIndex(detail, isEnd = false) {\n    const isRTL = document.dir === 'rtl';\n    const activated = this.activated;\n    const buttons = this.getButtons();\n    const index = buttons.findIndex(button => button.value === this.value);\n    const previous = buttons[index];\n    let current;\n    let nextIndex;\n    if (index === -1) {\n      return;\n    }\n    // Get the element that the touch event started on in case\n    // it was the checked button, then we will move the indicator\n    const rect = previous.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width;\n    // Get the element that the gesture is on top of based on the currentX of the\n    // gesture event and the Y coordinate of the starting element, since the gesture\n    // can move up and down off of the segment\n    const currentX = detail.currentX;\n    const previousY = rect.top + (rect.height / 2);\n    const nextEl = document.elementFromPoint(currentX, previousY);\n    const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n    const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n    // If the indicator is currently activated then we have started the gesture\n    // on top of the checked button so we need to slide the indicator\n    // by checking the button next to it as we move\n    if (activated && !isEnd) {\n      // Decrease index, move left in LTR & right in RTL\n      if (decreaseIndex) {\n        const newIndex = index - 1;\n        if (newIndex >= 0) {\n          nextIndex = newIndex;\n        }\n        // Increase index, moves right in LTR & left in RTL\n      }\n      else if (increaseIndex) {\n        if (activated && !isEnd) {\n          const newIndex = index + 1;\n          if (newIndex < buttons.length) {\n            nextIndex = newIndex;\n          }\n        }\n      }\n      if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n        current = buttons[nextIndex];\n      }\n    }\n    // If the indicator is not activated then we will just set the indicator\n    // to the element where the gesture ended\n    if (!activated && isEnd) {\n      current = nextEl;\n    }\n    /* tslint:disable-next-line */\n    if (current != null) {\n      /**\n       * If current element is ion-segment then that means\n       * user tried to select a disabled ion-segment-button,\n       * and we should not update the ripple.\n       */\n      if (current.tagName === 'ION-SEGMENT') {\n        return false;\n      }\n      if (previous !== current) {\n        this.checkButton(previous, current);\n      }\n    }\n    return true;\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'segment': true\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"tablist\", onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'segment-activated': this.activated,\n        'segment-disabled': this.disabled,\n        'segment-scrollable': this.scrollable\n      }) }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"color\": [\"colorChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nSegment.style = {\n  ios: segmentIosCss,\n  md: segmentMdCss\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\n\nlet ids = 0;\nconst SegmentButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.segmentEl = null;\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the segment button.\n     */\n    this.disabled = false;\n    /**\n     * Set the layout of the text and icon in the segment.\n     */\n    this.layout = 'icon-top';\n    /**\n     * The type of the button.\n     */\n    this.type = 'button';\n    /**\n     * The value of the segment button.\n     */\n    this.value = 'ion-sb-' + (ids++);\n    this.updateStyle = () => {\n      forceUpdate(this);\n    };\n    this.updateState = () => {\n      if (this.segmentEl) {\n        this.checked = this.segmentEl.value === this.value;\n      }\n    };\n  }\n  connectedCallback() {\n    const segmentEl = this.segmentEl = this.el.closest('ion-segment');\n    if (segmentEl) {\n      this.updateState();\n      addEventListener(segmentEl, 'ionSelect', this.updateState);\n      addEventListener(segmentEl, 'ionStyle', this.updateStyle);\n    }\n  }\n  disconnectedCallback() {\n    const segmentEl = this.segmentEl;\n    if (segmentEl) {\n      removeEventListener(segmentEl, 'ionSelect', this.updateState);\n      removeEventListener(segmentEl, 'ionStyle', this.updateStyle);\n      this.segmentEl = null;\n    }\n  }\n  get hasLabel() {\n    return !!this.el.querySelector('ion-label');\n  }\n  get hasIcon() {\n    return !!this.el.querySelector('ion-icon');\n  }\n  get tabIndex() {\n    if (this.disabled) {\n      return -1;\n    }\n    const hasTabIndex = this.el.hasAttribute('tabindex');\n    if (hasTabIndex) {\n      return this.el.getAttribute('tabindex');\n    }\n    return 0;\n  }\n  render() {\n    const { checked, type, disabled, hasIcon, hasLabel, layout, segmentEl, tabIndex } = this;\n    const mode = getIonMode(this);\n    const hasSegmentColor = () => segmentEl !== null && segmentEl.color !== undefined;\n    return (h(Host, { role: \"tab\", \"aria-selected\": checked ? 'true' : 'false', \"aria-disabled\": disabled ? 'true' : null, tabIndex: tabIndex, class: {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'in-segment': hostContext('ion-segment', this.el),\n        'in-segment-color': hasSegmentColor(),\n        'segment-button-has-label': hasLabel,\n        'segment-button-has-icon': hasIcon,\n        'segment-button-has-label-only': hasLabel && !hasIcon,\n        'segment-button-has-icon-only': hasIcon && !hasLabel,\n        'segment-button-disabled': disabled,\n        'segment-button-checked': checked,\n        [`segment-button-layout-${layout}`]: true,\n        'ion-activatable': true,\n        'ion-activatable-instant': true,\n        'ion-focusable': true,\n      } }, h(\"button\", { type: type, tabIndex: -1, class: \"button-native\", part: \"native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n        'segment-button-indicator': true,\n        'segment-button-indicator-animated': true\n      } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n  }\n  get el() { return getElement(this); }\n};\nSegmentButton.style = {\n  ios: segmentButtonIosCss,\n  md: segmentButtonMdCss\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"],"sourceRoot":"webpack:///","file":"31-es5.js"}