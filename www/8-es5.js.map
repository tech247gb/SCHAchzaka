{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { d as getAriaLabel, e as renderHiddenInput } from './helpers-1457892a.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n    this.disabled = false;\n    /**\n     * The value of the checkbox does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n     * it's only used when the checkbox participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  render() {\n    const { color, checked, disabled, el, indeterminate, inputId, name, value } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, (checked ? value : ''), disabled);\n    let path = indeterminate\n      ? h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })\n      : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" });\n    if (mode === 'md') {\n      path = indeterminate\n        ? h(\"path\", { d: \"M2 12H22\", part: \"mark\" })\n        : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" });\n    }\n    return (h(Host, { onClick: this.onClick, \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"checkbox\", class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        'interactive': true\n      }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: focusEl => this.focusEl = focusEl })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n"],"sourceRoot":"webpack:///","file":"8-es5.js"}