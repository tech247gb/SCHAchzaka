{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { a as addEventListener, b as removeEventListener, d as getAriaLabel } from './helpers-1457892a.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Radio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.inputId = `ion-rb-${radioButtonIds++}`;\n    this.radioGroup = null;\n    /**\n     * If `true`, the radio is selected.\n     */\n    this.checked = false;\n    /**\n     * The tabindex of the radio button.\n     * @internal\n     */\n    this.buttonTabindex = -1;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n    this.disabled = false;\n    this.updateState = () => {\n      if (this.radioGroup) {\n        this.checked = this.radioGroup.value === this.value;\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  /** @internal */\n  async setFocus(ev) {\n    ev.stopPropagation();\n    ev.preventDefault();\n    this.el.focus();\n  }\n  /** @internal */\n  async setButtonTabindex(value) {\n    this.buttonTabindex = value;\n  }\n  connectedCallback() {\n    if (this.value === undefined) {\n      this.value = this.inputId;\n    }\n    const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n    if (radioGroup) {\n      this.updateState();\n      addEventListener(radioGroup, 'ionChange', this.updateState);\n    }\n  }\n  disconnectedCallback() {\n    const radioGroup = this.radioGroup;\n    if (radioGroup) {\n      removeEventListener(radioGroup, 'ionChange', this.updateState);\n      this.radioGroup = null;\n    }\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'radio-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  render() {\n    const { inputId, disabled, checked, color, el, buttonTabindex } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    return (h(Host, { \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, \"aria-labelledby\": label ? labelId : null, role: \"radio\", tabindex: buttonTabindex, onFocus: this.onFocus, onBlur: this.onBlur, class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'interactive': true,\n        'radio-checked': checked,\n        'radio-disabled': disabled,\n      }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" }), h(\"div\", { class: \"radio-ripple\" })), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"radio\", checked: checked, disabled: disabled, tabindex: \"-1\", id: inputId })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"color\": [\"emitStyle\"],\n    \"checked\": [\"emitStyle\"],\n    \"disabled\": [\"emitStyle\"]\n  }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n  ios: radioIosCss,\n  md: radioMdCss\n};\n\nconst RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    this.setRadioTabindex = (value) => {\n      const radios = this.getRadios();\n      // Get the first radio that is not disabled and the checked one\n      const first = radios.find(radio => !radio.disabled);\n      const checked = radios.find(radio => (radio.value === value && !radio.disabled));\n      if (!first && !checked) {\n        return;\n      }\n      // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n      const focusable = checked || first;\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        }\n        else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n  }\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionChange.emit({ value });\n  }\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n    if (header) {\n      const label = this.label = header.querySelector('ion-label');\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n  onKeydown(ev) {\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = this.getRadios().filter(radio => !radio.disabled);\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex(radio => radio === ev.target);\n      const current = radios[index];\n      let next;\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\n        next = (index === radios.length - 1)\n          ? radios[0]\n          : radios[index + 1];\n      }\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\n        next = (index === 0)\n          ? radios[radios.length - 1]\n          : radios[index - 1];\n      }\n      if (next && radios.includes(next)) {\n        next.setFocus(ev);\n        if (!inSelectPopover) {\n          this.value = next.value;\n        }\n      }\n      // Update the radio group value when a user presses the\n      // space bar on top of a selected radio\n      if (['Space'].includes(ev.code)) {\n        this.value = (this.allowEmptySelection && this.value !== undefined)\n          ? undefined\n          : current.value;\n        // Prevent browsers from jumping\n        // to the bottom of the screen\n        ev.preventDefault();\n      }\n    }\n  }\n  render() {\n    const { label, labelId } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, onClick: this.onClick, class: mode }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"],"sourceRoot":"webpack:///","file":"24-es5.js"}