{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-textarea.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, f as readTask, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { f as debounceEvent, i as inheritAriaAttributes, h as inheritAttributes, r as raf, j as findItemLabel } from './helpers-1457892a.js';\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\n\nconst textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-ios{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-ios-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-textarea-ios-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-ios-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-textarea-ios-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\n\nconst textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-md{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-md-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-textarea-md-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-md-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-textarea-md-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\n\nconst Textarea = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionInput = createEvent(this, \"ionInput\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.inputId = `ion-textarea-${textareaIds++}`;\n    this.didBlurAfterEdit = false;\n    this.inheritedAttributes = {};\n    /**\n     * This is required for a WebKit bug which requires us to\n     * blur and focus an input to properly focus the input in\n     * an item with delegatesFocus. It will no longer be needed\n     * with iOS 14.\n     *\n     * @internal\n     */\n    this.fireFocusEvents = true;\n    this.hasFocus = false;\n    /**\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n     */\n    this.autocapitalize = 'none';\n    /**\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n     */\n    this.autofocus = false;\n    /**\n     * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n     */\n    this.clearOnEdit = false;\n    /**\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.\n     */\n    this.debounce = 0;\n    /**\n     * If `true`, the user cannot interact with the textarea.\n     */\n    this.disabled = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n    this.readonly = false;\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n    this.required = false;\n    /**\n     * If `true`, the element will have its spelling and grammar checked.\n     */\n    this.spellcheck = false;\n    /**\n     * If `true`, the element height will increase based on the value.\n     */\n    this.autoGrow = false;\n    /**\n     * The value of the textarea.\n     */\n    this.value = '';\n    this.onInput = (ev) => {\n      if (this.nativeInput) {\n        this.value = this.nativeInput.value;\n      }\n      this.emitStyle();\n      this.ionInput.emit(ev);\n    };\n    this.onFocus = (ev) => {\n      this.hasFocus = true;\n      this.focusChange();\n      if (this.fireFocusEvents) {\n        this.ionFocus.emit(ev);\n      }\n    };\n    this.onBlur = (ev) => {\n      this.hasFocus = false;\n      this.focusChange();\n      if (this.fireFocusEvents) {\n        this.ionBlur.emit(ev);\n      }\n    };\n    this.onKeyDown = () => {\n      this.checkClearOnEdit();\n    };\n  }\n  debounceChanged() {\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  /**\n   * Update the native input element when the value changes\n   */\n  valueChanged() {\n    const nativeInput = this.nativeInput;\n    const value = this.getValue();\n    if (nativeInput && nativeInput.value !== value) {\n      nativeInput.value = value;\n    }\n    this.runAutoGrow();\n    this.emitStyle();\n    this.ionChange.emit({ value });\n  }\n  connectedCallback() {\n    this.emitStyle();\n    this.debounceChanged();\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n        detail: this.el\n      }));\n    }\n  }\n  disconnectedCallback() {\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n        detail: this.el\n      }));\n    }\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = Object.assign(Object.assign({}, inheritAriaAttributes(this.el)), inheritAttributes(this.el, ['title']));\n  }\n  componentDidLoad() {\n    raf(() => this.runAutoGrow());\n  }\n  runAutoGrow() {\n    const nativeInput = this.nativeInput;\n    if (nativeInput && this.autoGrow) {\n      readTask(() => {\n        nativeInput.style.height = 'auto';\n        nativeInput.style.height = nativeInput.scrollHeight + 'px';\n        if (this.textareaWrapper) {\n          this.textareaWrapper.style.height = nativeInput.scrollHeight + 'px';\n        }\n      });\n    }\n  }\n  /**\n   * Sets focus on the native `textarea` in `ion-textarea`. Use this method instead of the global\n   * `textarea.focus()`.\n   */\n  async setFocus() {\n    if (this.nativeInput) {\n      this.nativeInput.focus();\n    }\n  }\n  /**\n   * Sets blur on the native `textarea` in `ion-textarea`. Use this method instead of the global\n   * `textarea.blur()`.\n   * @internal\n   */\n  async setBlur() {\n    if (this.nativeInput) {\n      this.nativeInput.blur();\n    }\n  }\n  /**\n   * Returns the native `<textarea>` element used under the hood.\n   */\n  getInputElement() {\n    return Promise.resolve(this.nativeInput);\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'interactive': true,\n      'textarea': true,\n      'input': true,\n      'interactive-disabled': this.disabled,\n      'has-placeholder': this.placeholder != null,\n      'has-value': this.hasValue(),\n      'has-focus': this.hasFocus\n    });\n  }\n  /**\n   * Check if we need to clear the text input if clearOnEdit is enabled\n   */\n  checkClearOnEdit() {\n    if (!this.clearOnEdit) {\n      return;\n    }\n    // Did the input value change after it was blurred and edited?\n    if (this.didBlurAfterEdit && this.hasValue()) {\n      // Clear the input\n      this.value = '';\n    }\n    // Reset the flag\n    this.didBlurAfterEdit = false;\n  }\n  focusChange() {\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n    if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n      this.didBlurAfterEdit = true;\n    }\n    this.emitStyle();\n  }\n  hasValue() {\n    return this.getValue() !== '';\n  }\n  getValue() {\n    return this.value || '';\n  }\n  render() {\n    const mode = getIonMode(this);\n    const value = this.getValue();\n    const labelId = this.inputId + '-lbl';\n    const label = findItemLabel(this.el);\n    if (label) {\n      label.id = labelId;\n    }\n    return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\n        [mode]: true,\n      }) }, h(\"div\", { class: \"textarea-wrapper\", ref: el => this.textareaWrapper = el }, h(\"textarea\", Object.assign({ class: \"native-textarea\", \"aria-labelledby\": label ? labelId : null, ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, this.inheritedAttributes), value))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"debounce\": [\"debounceChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet textareaIds = 0;\nTextarea.style = {\n  ios: textareaIosCss,\n  md: textareaMdCss\n};\n\nexport { Textarea as ion_textarea };\n"],"sourceRoot":"webpack:///","file":"39-es5.js"}