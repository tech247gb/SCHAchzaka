{"version":3,"sources":["src/app/pages/home/home.service.ts","src/app/services/equipment/equipment.service.ts","src/app/services/equipmentAll/equipmentAll.service.ts","src/app/services/equipmentApp/equipmentApp.service.ts","src/app/services/equipmentX2/equipmentX2.service.ts","src/app/services/equipmentX3/equipmentX3.service.ts","src/app/services/utils.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { SettingsService } from \"./../../services/global/setting.service\";\nimport { LoadingController } from \"@ionic/angular\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nimport { ZBar, ZBarOptions } from \"@ionic-native/zbar/ngx\";\nimport { SyncAPIService } from \"src/app/services/sync.service\";\nimport { UtilsService } from \"src/app/services/utils.service\";\nimport { EquipmentService } from \"src/app/services/equipment/equipment.service\";\nimport { Network } from \"@ionic-native/network/ngx\";\nimport { EquipmentX2CrudService } from \"src/app/services/equipmentX2/equipmentX2.crud\";\nimport { EquipmentX2Service } from \"src/app/services/equipmentX2/equipmentX2.service\";\nimport { EquipmentX3Service } from \"src/app/services/equipmentX3/equipmentX3.service\";\nimport { EquipmentAppService } from \"src/app/services/equipmentApp/equipmentApp.service\";\nimport { EquipmentAllCrudService } from \"src/app/services/equipmentAll/equipmentAll.crud\";\nimport { EquipmentAllService } from \"src/app/services/equipmentAll/equipmentAll.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeService {\n  public webDb;\n  httpOptions = {\n    headers: new HttpHeaders({\n      //   \"Content-Type\": \"application/json\",\n      //   // \"Access-Control-Allow-Methods\": \"GET,POST,PATCH,DELETE,PUT,OPTIONS\",\n      //   // \"Access-Control-Allow-Headers\":\n      //   //   \"Origin, Content-Type, X-Auth-Token, content-type\",\n      //   \"Access-Control-Allow-Origin\": \"*\",\n    }),\n  };\n\n  constructor(\n    public loadingCtrl: LoadingController,\n    private http: HttpClient,\n    private zbar: ZBar,\n    public setting: SettingsService,\n    public utils: UtilsService,\n    public equiService: EquipmentService,\n    public equiAppService: EquipmentAppService,\n    public equiX2Service: EquipmentX2Service,\n    public equiX3Service: EquipmentX3Service,\n    public equiAllService:EquipmentAllService,\n    public network:Network,\n\n    public syncAPIService: SyncAPIService\n  ) {\n    this.startSync();\n  }\n\n  options: ZBarOptions = {\n    flash: \"off\",\n    drawSight: false,\n    text_title: \"נא הכנס ברקוד\", // Android only\n    text_instructions: \"מצמצת. פספספת. אז בבקשה!\", // Android only\n  };\n\n  startSync() {\n    this.syncAPIService.startSync();\n    // this.getTasks();\n  }\n\n  async getTasks(\n    dateFrom,\n    dateTo,\n    TreatmentType?,\n    location?,\n    categorie?,\n    barcode?,\n  ) {\n    let loading = await this.loadingCtrl.create({ message: \"...בטעינה\" });\n    let user = localStorage.empNum;\n    let URL =\n      this.setting.globalURL +\n      \"getEquipments?employee=\" +\n      user +\n      \"&dateFrom=\" +\n      dateFrom +\n      \"&dateTo=\" +\n      dateTo;\n    if (\n      TreatmentType != null &&\n      TreatmentType != \"search\" &&\n      TreatmentType != \"barcode\"\n    )\n      URL = URL + \"&treatmentType=\" + TreatmentType;\n    if (location != null && location != \"\") URL = URL + \"&stand=\" + location;\n    if (categorie != null && categorie != \"\") URL = URL + \"&eqart=\" + categorie;\n    if (barcode != null && barcode != \"\") URL = URL + \"&equipment=\" + barcode;\n    loading.present();\n   \n    try {\n      return new Promise((resolve, reject) => {\n        this.http\n          // .get(\"assets/jsons/tasks.json\", this.httpOptions)\n          .get(\n            URL\n            // this.setting.globalURL +\n            // // \"getTreatments?employee=\" +\n            // \"getEquipments?employee=\" +\n\n            // user +\n            // \"&dateFrom=\" +\n            // dateFrom +\n            // \"&dateTo=\" +\n            // dateTo\n          )\n          .toPromise()\n          .then((res) => {\n            let resultjson = this.utils.getArrayFromJson(res);\n            \n            if(resultjson.length>0){\n              if(TreatmentType==='X1'){\n                this.equiService.deleteFromDb();\n                resultjson.forEach(element => {\n                  this.equiService.insertUrlToDb(element);\n                });\n              }else if(TreatmentType==='X2'){\n                this.equiX2Service.deleteFromDb();\n                resultjson.forEach(element => {\n                  this.equiX2Service.insertUrlToDb(element);\n                });\n              }else if(TreatmentType==='X3'){\n                this.equiX3Service.deleteFromDb();\n                resultjson.forEach(element => {\n                  this.equiX3Service.insertUrlToDb(element);\n                });\n              }else if(TreatmentType==='search'){\n                this.equiAllService.deleteFromDb();\n                resultjson.forEach(element => {\n                  this.equiAllService.insertUrlToDb(element);\n                });\n              }\n              console.log('resultjson',resultjson);\n            }\n            resolve(res);\n          })\n          .catch((err) => console.log(\"error:\", err));\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      loading.dismiss();\n    }\n  }\n\n  async getTipulim() {\n    let loading = await this.loadingCtrl.create({ message: \"...בטעינה\" });\n    try {\n      return new Promise((resolve, reject) => {\n        this.http\n          // .get(\"assets/jsons/tasks.json\", this.httpOptions)\n          .get(this.setting.globalURL + \"getAppTreatments\")\n          .toPromise()\n          .then((res) => {\n            let resultjson = this.utils.getArrayFromJson(res);\n            if(resultjson.length>0){\n            this.equiAppService.deleteFromDb();\n            console.log('resultjson',resultjson);\n            resultjson.forEach(element => {\n              this.equiAppService.insertUrlToDb(element);\n            });\n            console.log(res);\n          }\n            resolve(res);\n          })\n          .catch((err) => console.log(\"error:\", err));\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      loading.dismiss();\n    }\n  }\n\n  async getTreatment(equipment, treatmentType) {\n    if(this.network.type !=='none' ) {\n      let loading = await this.loadingCtrl.create({ message: \"...בטעינה\" });\n      loading.present();\n      try {\n        return new Promise((resolve, reject) => {\n          this.http\n            // .get(\"assets/jsons/tasks.json\", this.httpOptions)\n            .get(\n              this.setting.globalURL +\n                \"getPreviousTreatments?equipment=\" +\n                equipment\n              // +\n              //   \"&type=\" +\n              //   treatmentType\n            )\n            .toPromise()\n            .then((res) => {\n              console.log(res);\n              resolve(res);\n            })\n            .catch((err) => console.log(\"error:\", err));\n        });\n      } catch (err) {\n        console.log(err);\n      } finally {\n        loading.dismiss();\n      }\n    }\n\n    \n  }\n\n  scanBarcode(returnFn) {\n    this.zbar\n      .scan(this.options)\n      .then((result) => {\n        returnFn(result);\n      })\n      .catch((err) => {\n        console.log(\"Error\", err);\n      });\n  }\n\n  getLocations = (location) => {\n    this.webDb = this.syncAPIService.webDb;\n    let Location = \"%\" + location + \"%\";\n    try {\n      return new Promise((resolve, reject) => {\n        this.webDb.transaction(function (tx) {\n          tx.executeSql(\n            \"SELECT * FROM locations WHERE ktext LIKE ?\",\n            [Location],\n            function (tx, results) {\n              let arr = [...results.rows];\n              resolve(arr);\n            }\n          );\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  getCategories = (categorie) => {\n    this.webDb = this.syncAPIService.webDb;\n    let Categorie = \"%\" + categorie + \"%\";\n    try {\n      return new Promise((resolve, reject) => {\n        this.webDb.transaction(function (tx) {\n          tx.executeSql(\n            \"SELECT * FROM categorie WHERE eartx LIKE ?\",\n            [Categorie],\n            function (tx, results) {\n              let arr = [...results.rows];\n              resolve(arr);\n            }\n          );\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  async getBarcodes(barcode) {\n    this.webDb = this.syncAPIService.webDb;\n    let Barcode = \"%\" + barcode + \"%\";\n    try {\n      return new Promise((resolve, reject) => {\n        this.webDb.transaction(function (tx) {\n          tx.executeSql(\n            \"SELECT * FROM barcode WHERE equipment LIKE ?\",\n            [Barcode],\n            function (tx, results) {\n              let arr = [...results.rows];\n              resolve(arr);\n            }\n          );\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","import {EquipmentCrudService} from \"./equipment.crud\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {SyncAPIService} from \"../sync.service\";\r\nimport {UtilsService} from \"../global/utils.service\";\r\n\r\n@Injectable({providedIn: \"root\"})\r\n\r\nexport class EquipmentService {\r\n    public webDb : any;\r\n\r\n    constructor(public equipmenrService : EquipmentCrudService, public syncAPIService : SyncAPIService, public utils : UtilsService,) {}\r\n\r\n    insertUrlToDb = (item) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"INSERT INTO equipment (_id,__v,vendor,treatmentType,treatmentNumber,stand,serialNumber,responsibleNo,responsible,nextTreatment,location,lastTreatment,imageExists,equipmentObjectType,equipmentDescription,equipmentCategory,equipment,eqart,eartx,begru,atWork) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", [\r\n\r\n                    item[\"_id\"],\r\n                    item[\"__v\"],\r\n                    item[\"vendor\"],\r\n                    item[\"treatmentType\"],\r\n                    item[\"treatmentNumber\"],\r\n                    item[\"stand\"],\r\n                    item[\"serialNumber\"],\r\n                    item[\"responsibleNo\"],\r\n                    item[\"responsible\"],\r\n                    item[\"nextTreatment\"],\r\n                    item[\"location\"],\r\n                    item[\"lastTreatment\"],\r\n                    item[\"imageExists\"],\r\n                    item[\"equipmentObjectType\"],\r\n                    item[\"equipmentDescription\"],\r\n                    item[\"equipmentCategory\"],\r\n                    item[\"equipment\"],\r\n                    item[\"eqart\"],\r\n                    item[\"eartx\"],\r\n                    item[\"begru\"],\r\n                    item['atWork']?item['atWork']:false\r\n\r\n                ], (t, results) => { // console.log('jashdasd', results)\r\n\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    deleteFromDb = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipment \")\r\n                resolve(\"success\");\r\n            }, function (t, error) {\r\n                console.log(\"Error insert: \" + error.message);\r\n            });\r\n        });\r\n\r\n    };\r\n    deleteFromDbById = (item) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        console.log('ghfhgf',item);\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipment WHERE _id = ?\", [\r\n                    item,\r\n                ], (t, results) => {\r\n                    console.log(results);\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    updateDbById = (item,id) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        console.log('ghfhgf',item);\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"UPDATE equipment SET atWork = ? WHERE _id = ?\",\r\n                [\"true\", id], (t, results) => {\r\n                    console.log(results);\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    getTasks = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipment\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows));\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    getTaskX1Count= () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipment\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows).length);\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n}\r\n\r\n","import {EquipmentAllCrudService} from \"./equipmentAll.crud\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {SyncAPIService} from \"../sync.service\";\r\nimport {UtilsService} from \"../global/utils.service\";\r\n\r\n@Injectable({providedIn: \"root\"})\r\n\r\nexport class EquipmentAllService {\r\n    public webDb : any;\r\n\r\n    constructor(public equipmenrService : EquipmentAllCrudService, public syncAPIService : SyncAPIService, public utils : UtilsService,) {}\r\n\r\n    insertUrlToDb = (item) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"INSERT INTO equipmentAll (_id,__v,vendor,treatmentType,treatmentNumber,stand,serialNumber,responsibleNo,responsible,nextTreatment,location,lastTreatment,imageExists,equipment,equipmentObjectType,equipmentDescription,equipmentCategory,eqart,eartx,begru) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", [\r\n                    item[\"_id\"],\r\n                    item[\"__v\"],\r\n                    item[\"vendor\"],\r\n                    item[\"treatmentType\"],\r\n                    item[\"treatmentNumber\"],\r\n                    item[\"stand\"],\r\n                    item[\"serialNumber\"],\r\n                    item[\"responsibleNo\"],\r\n                    item[\"responsible\"],\r\n                    item[\"nextTreatment\"],\r\n                    item[\"location\"],\r\n                    item[\"lastTreatment\"],\r\n                    item[\"imageExists\"],\r\n                    item[\"equipment\"],\r\n                    item[\"equipmentObjectType\"],\r\n                    item[\"equipmentDescription\"],\r\n                    item[\"equipmentCategory\"],\r\n                    item[\"eqart\"],\r\n                    item[\"eartx\"],\r\n                    item[\"begru\"]\r\n\r\n                ], (t, results) => { // console.log('jashdasd', results)\r\n\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    deleteFromDb = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipmentAll \")\r\n                resolve(\"success\");\r\n            }, function (t, error) {\r\n                console.log(\"Error insert: \" + error.message);\r\n            });\r\n        });\r\n\r\n    };\r\n    deleteFromDbById = (item) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        console.log('ghfhgf',item);\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipmentAll WHERE _id = ?\", [\r\n                    item,\r\n                ], (t, results) => {\r\n                    console.log(results);\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    getTasks = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipmentAll\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows));\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    getTaskAllCount= () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipmentAll\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows).length);\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n}\r\n\r\n","import {EquipmentAppCrudService} from \"./equipmentApp.crud\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {SyncAPIService} from \"../sync.service\";\r\nimport {UtilsService} from \"../global/utils.service\";\r\n\r\n@Injectable({providedIn: \"root\"})\r\n\r\nexport class EquipmentAppService {\r\n    public webDb : any;\r\n\r\n    constructor(public equipmenrService : EquipmentAppCrudService, public syncAPIService : SyncAPIService, public utils : UtilsService,) {}\r\n\r\n    insertUrlToDb = (item) => {\r\n        console.log(item);\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"INSERT INTO equipmentApp (_id,type,treatmentLongDescription,treatmentDescription,treatmentDate,submittedDate,sendToEcc,responsible,imageExists,finish,externalUser,equipment,begru) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)\", [\r\n                    item[\"_id\"],\r\n                    item[\"type\"],\r\n                    item[\"treatmentLongDescription\"],\r\n                    item[\"treatmentDescription\"],\r\n                    item[\"treatmentDate\"],\r\n                    item[\"submittedDate\"],\r\n                    item[\"sendToEcc\"],\r\n                    item[\"responsible\"],\r\n                    item[\"imageExists\"],\r\n                    item[\"finish\"],\r\n                    item[\"externalUser\"],\r\n                    item[\"equipment\"],\r\n                    item[\"begru\"],\r\n\r\n                ], (t, results) => { // console.log('jashdasd', results)\r\n\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    deleteFromDb = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipmentApp \")\r\n                resolve(\"success\");\r\n            }, function (t, error) {\r\n                console.log(\"Error insert: \" + error.message);\r\n            });\r\n        });\r\n\r\n    };\r\n    deleteFromDbById = (item) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        console.log('ghfhgf',item);\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipmentApp WHERE _id = ?\", [\r\n                    item,\r\n                ], (t, results) => {\r\n                    console.log(results);\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    getTasks = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipmentApp\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows));\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    getTaskAppCount= () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipmentApp\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows).length);\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n}\r\n\r\n","import {EquipmentX2CrudService} from \"./equipmentX2.crud\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {SyncAPIService} from \"../sync.service\";\r\nimport {UtilsService} from \"../global/utils.service\";\r\n\r\n@Injectable({providedIn: \"root\"})\r\n\r\nexport class EquipmentX2Service {\r\n    public webDb : any;\r\n\r\n    constructor(public equipmenrService : EquipmentX2CrudService, public syncAPIService : SyncAPIService, public utils : UtilsService,) {}\r\n\r\n    insertUrlToDb = (item) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"INSERT INTO equipmentx2 (_id,__v,vendor,treatmentType,treatmentNumber,stand,serialNumber,responsibleNo,responsible,nextTreatment,location,lastTreatment,imageExists,equipmentObjectType,equipmentDescription,equipmentCategory,equipment,eqart,eartx,begru,atWork) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", [\r\n\r\n                    item[\"_id\"],\r\n                    item[\"__v\"],\r\n                    item[\"vendor\"],\r\n                    item[\"treatmentType\"],\r\n                    item[\"treatmentNumber\"],\r\n                    item[\"stand\"],\r\n                    item[\"serialNumber\"],\r\n                    item[\"responsibleNo\"],\r\n                    item[\"responsible\"],\r\n                    item[\"nextTreatment\"],\r\n                    item[\"location\"],\r\n                    item[\"lastTreatment\"],\r\n                    item[\"imageExists\"],\r\n                    item[\"equipmentObjectType\"],\r\n                    item[\"equipmentDescription\"],\r\n                    item[\"equipmentCategory\"],\r\n                    item[\"equipment\"],\r\n                    item[\"eqart\"],\r\n                    item[\"eartx\"],\r\n                    item[\"begru\"],\r\n                    item['atWork']?item['atWork']:false\r\n\r\n\r\n                ], (t, results) => { // console.log('jashdasd', results)\r\n\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    deleteFromDb = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipmentx2 \")\r\n                resolve(\"success\");\r\n            }, function (t, error) {\r\n                console.log(\"Error insert: \" + error.message);\r\n            });\r\n        });\r\n\r\n    };\r\n    deleteFromDbById = (item) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        console.log('ghfhgf',item);\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipmentx2 WHERE _id = ?\", [\r\n                    item,\r\n                ], (t, results) => {\r\n                    console.log(results);\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    getTasks = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipmentx2\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows));\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    updateDbById = (item,id) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        console.log('ghfhgf',item);\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"UPDATE equipmentx2 SET atWork = ? WHERE _id = ?\",\r\n                [\"true\", id], (t, results) => {\r\n                    console.log(results);\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    getTaskX2Count= () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipmentx2\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows).length);\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n}\r\n\r\n","import {EquipmentX3CrudService} from \"./equipmentX3.crud\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {SyncAPIService} from \"../sync.service\";\r\nimport {UtilsService} from \"../global/utils.service\";\r\n\r\n@Injectable({providedIn: \"root\"})\r\n\r\nexport class EquipmentX3Service {\r\n    public webDb : any;\r\n\r\n    constructor(public equipmenrService : EquipmentX3CrudService, public syncAPIService : SyncAPIService, public utils : UtilsService,) {}\r\n\r\n    insertUrlToDb = (item) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"INSERT INTO equipmentx3 (_id,__v,vendor,treatmentType,treatmentNumber,stand,serialNumber,responsibleNo,responsible,nextTreatment,location,lastTreatment,imageExists,equipmentObjectType,equipmentDescription,equipmentCategory,equipment,eqart,eartx,begru,atWork) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", [\r\n\r\n                    item[\"_id\"],\r\n                    item[\"__v\"],\r\n                    item[\"vendor\"],\r\n                    item[\"treatmentType\"],\r\n                    item[\"treatmentNumber\"],\r\n                    item[\"stand\"],\r\n                    item[\"serialNumber\"],\r\n                    item[\"responsibleNo\"],\r\n                    item[\"responsible\"],\r\n                    item[\"nextTreatment\"],\r\n                    item[\"location\"],\r\n                    item[\"lastTreatment\"],\r\n                    item[\"imageExists\"],\r\n                    item[\"equipmentObjectType\"],\r\n                    item[\"equipmentDescription\"],\r\n                    item[\"equipmentCategory\"],\r\n                    item[\"equipment\"],\r\n                    item[\"eqart\"],\r\n                    item[\"eartx\"],\r\n                    item[\"begru\"],\r\n                    item['atWork']?item['atWork']:false\r\n\r\n\r\n                ], (t, results) => { // console.log('jashdasd', results)\r\n\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    deleteFromDb = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipmentx3 \")\r\n                resolve(\"success\");\r\n            }, function (t, error) {\r\n                console.log(\"Error insert: \" + error.message);\r\n            });\r\n        });\r\n\r\n    };\r\n    deleteFromDbById = (item) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        console.log('ghfhgf',item);\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"DELETE FROM equipmentx3 WHERE _id = ?\", [\r\n                    item,\r\n                ], (t, results) => {\r\n                    console.log(results);\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    getTasks = () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipmentx3\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows));\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    updateDbById = (item,id) => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        console.log('ghfhgf',item);\r\n        return new Promise((resolve, reject) => {\r\n            this.webDb.transaction((t) => {\r\n                t.executeSql(\"UPDATE equipmentx3 SET atWork = ? WHERE _id = ?\",\r\n                [\"true\", id], (t, results) => {\r\n                    console.log(results);\r\n                    resolve(\"success\");\r\n                }, function (t, error) {\r\n                    console.log(\"Error insert: \" + error.message);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    getTaskX3Count= () => {\r\n        this.webDb = this.syncAPIService.webDb;\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.webDb.transaction((tx) => {\r\n                    tx.executeSql(\"SELECT * FROM equipmentx3\", [], (tx, results) => {\r\n                        resolve(this.utils.getArrayFromJson(results.rows).length);\r\n                    });\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ToastController, AlertController, Platform } from \"@ionic/angular\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UtilsService {\r\n  constructor(\r\n    public toastController: ToastController,\r\n    public alertController: AlertController,\r\n    public platform: Platform\r\n  ) {}\r\n\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 15000,\r\n      cssClass: \"mainToast\",\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async presentalertConfirm(message, header?) {\r\n    if (header == \"\") {\r\n      header = \"שימי לב!\";\r\n    }\r\n    return new Promise(async (resolve, reject) => {\r\n      const alert = await this.alertController.create({\r\n        header: header,\r\n        message: message,\r\n        buttons: [\r\n          {\r\n            text: \"ביטול\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            handler: (blah) => {\r\n              console.log(\"Confirm Cancel: blah\");\r\n              resolve(0);\r\n            },\r\n          },\r\n          {\r\n            text: \"אישור\",\r\n            handler: () => {\r\n              console.log(\"Confirm Okay\");\r\n              resolve(1);\r\n            },\r\n          },\r\n        ],\r\n      });\r\n\r\n      await alert.present();\r\n    });\r\n  }\r\n\r\n  async presentalertAPK(message, APKurl) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const alert = await this.alertController.create({\r\n        header: \"שימי לב !\",\r\n        message: message,\r\n        cssClass: \"mainToast\",\r\n        backdropDismiss: false, // <- Here! :)\r\n        buttons: [\r\n          {\r\n            text: \"סגור אפליקציה\",\r\n            handler: (blah) => {\r\n              navigator[\"app\"].exitApp();\r\n              // resolve(0);\r\n            },\r\n          },\r\n          {\r\n            text: \"עידכון גירסה\",\r\n            handler: () => {\r\n              window.open(APKurl, '_blank');\r\n              resolve(1); \r\n              // window.location.href = APKurl;\r\n              // resolve(1);\r\n            },\r\n          },\r\n        ],\r\n      });\r\n\r\n      await alert.present();\r\n    });\r\n  }\r\n\r\n  async presentalertAPKVersion(message, APKurl) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const alert = await this.alertController.create({\r\n        header: \"שימי לב !\",\r\n        message: message,\r\n        cssClass: \"mainToast\",\r\n        backdropDismiss: false, // <- Here! :)\r\n        buttons: [\r\n          {\r\n            text: \"מאוחר יותר\",\r\n            handler: (blah) => {\r\n              // navigator[\"app\"].exitApp();\r\n              resolve(0);\r\n            },\r\n          },\r\n          {\r\n            text: \"עידכון גירסה\",\r\n            handler: () => {\r\n              window.open(APKurl, '_blank');\r\n              resolve(1); \r\n              // window.location.href = APKurl;\r\n              // resolve(1);\r\n            },\r\n          },\r\n        ],\r\n      });\r\n\r\n      await alert.present();\r\n    });\r\n  }\r\n  getArrayFromJson(obj) {\r\n    let arr = [];\r\n    for (let i = 0; i < obj.length; i++) {\r\n      arr.push(obj[i]);\r\n    }\r\n    return arr;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default~pages-home-home-module~pages-intro-intro-module~pages-login-login-module~pages-task-page-tas~e21d1752-es5.js"}